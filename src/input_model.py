# generated by datamodel-codegen:
#   filename:  input_schema.json
#   timestamp: 2024-04-19T07:25:15+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class OpenaiVectorStoreIntegration(BaseModel):
    vector_store_id: str = Field(
        ..., description='Vector Store ID', title='Vector Store ID'
    )
    openai_api_key: str = Field(
        ..., description='OpenAI API KEY', title='OpenAI API KEY'
    )
    assistant_id: Optional[str] = Field(
        None,
        description='Assistant ID (required only when a file exceeds OpenAI limits and needs to be split)',
        title='Assistant ID',
    )
    fields: List = Field(
        ...,
        description='A list of fields which should be selected from the items, only these fields will remain in the resulting record objects.\n\n For example, when using the website content crawler, you might select fields such as `text` and `url`, and `metadata.title` among others, to be included in the vector store file.',
        title='A list of fields which should be selected from the items',
    )
    file_ids_to_delete: Optional[List] = Field(
        None,
        description='Delete specified file ids. This can be useful when one needs to delete files that are no longer needed.',
        title='Array of vector store file ids to deleted',
    )
    file_prefix: Optional[str] = Field(
        None,
        description="Using a file prefix streamlines the management of vector store file updates by eliminating the need to track each file's ID. For instance, if you set the file_prefix to 'apify-advisor', the Actor will initially locate all files in vector store with this prefix. Subsequently, it will delete these files and create new ones, also prefixed accordingly.",
        min_length=5,
        title='Delete/Create vector store files with a prefix',
    )
    dataset_id: Optional[str] = Field(
        None,
        description='Dataset ID (when running standalone without integration, typically when debugging or in ad-hoc settings)',
        title='Dataset ID',
    )
    save_in_apify_key_value_store: Optional[bool] = Field(
        False,
        description='Save all created files in the Apify Key-Value Store to easily check and retrieve all files (this is typically used when debugging)',
        title='Save files also in Apify key-value store',
    )
