# generated by datamodel-codegen:
#   filename:  input_schema.json
#   timestamp: 2024-04-15T09:42:26+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class OpenaiAssistantFilesIntegrationInputs(BaseModel):
    assistant_id: str = Field(
        ..., description='OpenAI Assistant ID.', title='OpenAI Assistant ID'
    )
    dataset_id: Optional[str] = Field(
        None,
        description='Dataset ID (when running standalone without integration)',
        title='Dataset ID',
    )
    fields: List = Field(
        ...,
        description='A list of fields which should be picked from the items, only these fields will remain in the resulting record objects.',
        title='A list of fields which should be picked from the items',
    )
    file_ids_to_delete: Optional[List] = Field(
        None,
        description='Delete specified file ids (OpenAI does not allow to update a file)',
        title='Array of Assistant file ids to deleted',
    )
    file_prefix: Optional[str] = Field(
        None,
        description='Specifying file prefix allows to simple handle Assistant files updates (otherwise would need to all file_ids).',
        title='Delete/Create Assistant files with a prefix',
    )
    openai_api_key: str = Field(
        ..., description='OpenAI API KEY', title='OpenAI API KEY'
    )
